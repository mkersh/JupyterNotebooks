; This is the Calva evaluation results output window.
; TIPS: The keyboard shortcut `ctrl+alt+c o` shows and focuses this window
;   when connected to a REPL session.
; Please see https://calva.io/output/ for more info.
; Happy coding! ♥️

; Jacking in...
; Hooking up nREPL sessions...
; Connected session: clj
; TIPS: 
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
clj::tools.repl-navigate=> 

; Jack-in done.
clj::tools.repl-navigate=> 
; Evaluating file: con-basics.clj
nil
clj::concurrency.con-basics=> 
#'concurrency.con-basics/atom-swap-test
clj::concurrency.con-basics=> 
"""uuupppddadattea-ea-ttoamt:o me"-:a t" o m:" "T"Thrheraeda-d2-"3" 

"Thread-1"
#'concurrency.con-basics/atom1
clj::concurrency.con-basics=> 
""upudpadtaet-ea-taotmo:m :" "  ""TThhrreeada-d2-"1"

"update-atom: " "Thread-2"
{:count 4, "Thread-3" true, "Thread-1" true, "Thread-2" true}
clj::concurrency.con-basics=> 
{:count 4, "Thread-3" true, "Thread-1" true, "Thread-2" true}
clj::concurrency.con-basics=> 
{:count 4, "Thread-3" true, "Thread-1" true, "Thread-2" true}
clj::concurrency.con-basics=> 
{:count 4, "Thread-3" true, "Thread-1" true, "Thread-2" true}
clj::concurrency.con-basics=> 
#'concurrency.con-basics/atom-swap-test
clj::concurrency.con-basics=> 
"update-atom: " "Thread-1"
"
u"pduaptdea-taet-om: " "Tharetaodm-:2 ""
 
"Thread-3"
#'concurrency.con-basics/atom1
clj::concurrency.con-basics=> 
"update-atom: " "Thread-2"
"update-atom: " "Thread-3"
"update-atom: " "Thread-3"
{:count 4, "Thread-1" true, "Thread-2" true, "Thread-3" true}
clj::concurrency.con-basics=> 
#'concurrency.con-basics/sync-prn
clj::concurrency.con-basics=> 
"test"
nil
clj::concurrency.con-basics=> 
"test" "gghfg"
nil
clj::concurrency.con-basics=> 
#'concurrency.con-basics/update-atom
clj::concurrency.con-basics=> 
#'concurrency.con-basics/atom-swap-test
clj::concurrency.con-basics=> 
"update-atom: " "Thread-1"
"update-atom: " "Thread-2"
"update-atom: " "Thread-3"
#'concurrency.con-basics/atom1
clj::concurrency.con-basics=> 
"update-atom: " "Thread-1"
"update-atom: " "Thread-3"
"update-atom: " "Thread-1"
{:count 4, "Thread-2" true, "Thread-3" true, "Thread-1" true}
clj::concurrency.con-basics=> 
#'concurrency.con-basics/atom-swap-test
clj::concurrency.con-basics=> 
"update-atom: " "Thread-1"
"update-atom: " "Thread-2"
"update-atom: " "Thread-3"
#'concurrency.con-basics/atom1
clj::concurrency.con-basics=> 
"update-atom: " "Thread-3"
"update-atom: " "Thread-2"
"update-atom: " "Thread-2"
{:count 4, "Thread-1" true, "Thread-3" true, "Thread-2" true}
clj::concurrency.con-basics=> 
{:count 4, "Thread-1" true, "Thread-3" true, "Thread-2" true}
clj::concurrency.con-basics=> 
